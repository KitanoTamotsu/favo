Favorit Pages.alfredworkflowのメモ

機能：お気に入りページの登録・ランダム表示

インストール：
1.ワークフローをダウンロード
2.ファイルをダブルクリックしてワークフローに登録

使い方：
キーワードfavoを入力
　以下のパラメータを指定できます
　パラメータなし　→ 追加したページをランダムに表示
　aもしくはadd 　→ Safariで閲覧しているページをテキストファイルに追加
　eもしくはedit　→ 追加したテキストファイルを表示（リストの修正や削除ができます）


動き方：
 1.テキストファイル（~/Documents/Alfred/favo/favolist.txt）にURLを登録（1行に1URLとして記述）
 2.ファイルの登録内容を読み込みランダム表示


開発メモ：
　
　1.ワークフロー・デザイン
　　・キーワード（パラメータはオプショナル）起動でパラメータによって、登録、編集、表示をそれぞれ処理する
　　・登録するURLはSafariから取得する
　　
　　実装した細かな手法
　　・Post Notificaftionに2つのパラメータを渡す（標準出力以外の受け渡しとして変数を使う）
　　・Randomユーティリティのリストをファイルから読み込み動的に設定する

　　実装できなかったもの
　　・Alfred環境変数で設定したホームディレクトリ'~'がRunScriptでうまく稼働しない。。。


　2.Post Notificaftionに2つのパラメータを渡す
　　
　　Add Lisitの流れを見てください（赤いフロー）
　　Append to FileオブジェクトでURLをテキストファイルに追加した後で、OSXの通知を使ってメッセージを表示させます

　　この際、テキストファイルの場所と追加したページのタイトルを表示させています
　　テキストファイルの場所は、Append to Fileオブジェクトの標準出力なので{query}で受け渡すことができます
　　追加したページのタイトルは{var:title}という変数で受け渡しています

　　この変数{var:title}は、Arg and Varsユーティリティでセットしています
    Arg and Varsユーティリティを開くと、Variables:に、title、{query}の1行が記載されていますが、
　　これは、その前のRun Scriptオブジェクトの標準出力{query}をワークフローの変数{var:title}にセットするという意味です
　

　3.Safariで表示しているHPのURLとタイトルを取得する

　　Lesson9の手法を使います
　　osascriptでアップルスクリプトを動かしています
　　上述の{var:title}をセットするためにRun Scriptをタイトル取得用とURL取得用に分離しています

　　タイトル取得部分を例として書いておきます
　　title=`osascript -e 'tell app "safari" to get the name of the current tab of window 1'`

　
　4.Randomユーティリティのリストをファイルから読み込み動的に設定する

　　黄色い部分のフローです
　　Lesson12のウィキペディアおまかせ表示では、あらかじめリストを準備しましたが、
　　今回はファイルから読み込んで動的にセットします

　　Randomユーティリティを見てください
　　Random:としてword from listを設定してWords:の一覧には{query}とあるだけです
　　そうです。このオブジェクトの前段のフローであるRun Scriptの標準出力にリストを書き出してセットするのです

　　ではそのRun Scriptを見てみましょう（黄色いRun Scriptです）

　　ここも簡単なコマンドです
　　ファイルの内容をechoしているだけです
　　こうすることで、ファイルに登録されたURLが全てRandomユーティリティのリストになるっていう寸法さ！

　　でもなぜか、workflowの環境変数にセットしたfilenameのホームディレクトリ"~"が使えませんでした
　　"Users/..."と書けばworkflowの環境変数でも使えましたが、その場合配布した先の環境ではうまくうごきません
　　仕方なくスクリプトの中でホームディレクトリをリテラルで記載しています
  　ファイルの置き場所を変更する際には注意してください

　　Randomユーティリティのリスト自体がURLですので、あとはOpen URLオブジェクトで表示させればOKです


背景
　
　Lesson12のおまかせウィキペディアを作成した際に、ウィキペディアの高度な検索結果を表示させたいと思いました
　例えば、『ウィキペディアのタイトルに”効果”か”現象”を含む記事を更新が新しい順に検索』みたいな
　でもこの場合、フィードバックとしてLarge TypeするURLが見ただけではわからず、あまりふさわしくない感じでした
  そこでこのワークフローを思いつきました
　お気に入りページというか、面白いと思った記事を保存して、後で適当に読むというような利用を想定しています
　
　
　　　


　　
  
